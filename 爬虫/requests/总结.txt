"""
反爬：
    1、useragent
反反爬：
    1、加上对应的useragent，伪装成对应的浏览器

反爬：
    2、cookie
反反爬：
    2、查看浏览器，获取真实cookie

反爬：
    3、ip
反反爬：
    3、使用代理ip,建议购买高效稳定高匿

反爬：
    4、js生成的数据
反反爬：
    4、分析搜索，可以借助pyexecjs+node.js等api运行js代码或直接使用python代码模拟

反爬：
    5、需要登录
反反爬
    5、
        1、登录之后，访问页面，找到cookie，放入header。
        2、多找几个帐号，登录，找到cookie，每次随机获取一个，放入header。cookie池
        3、还可以使用Session对象，第一次登录获取cookie，存入Session对象中，下一次再用这个Session对象发送请求，就会携带对应域的cookie

反爬：
    6、refer
反反爬
    6、加上对应的refer




如果PC端反爬或者获取数据困难，试着访问移动端比如手机端，或许可以解决，因为移动端通常反爬比较少。


url 怎么得到？
    1、浏览器的network查看
    2、浏览器的search


文字数据：
    1、异步   json字符串--->字典--->键值对
    2、同步   html字符串--->正则findall   .*?



cookie1 cookie2 cookie3
{
   "cookie1":默认是0,使用的次数，
   "cookie2":默认是0,使用的次数，
   "cookie3":默认是0,使用的次数，
}
按照使用的次数排序，获取次数较小的使用，再加1




分析：
    1、找到需求内容对应的url
    2、发请求，获取响应内容
    3、提取





数据提取：
    1、正则（任何字符串都可以）
    2、json（json格式的字符串）
    3、xpath（html,xml...url对应的响应html内容与Elements一致）



xpath:
    1、先找一块数据，得到集合
    2、遍历，用相对路径找



爬数据，空数据
    python--->None
    json--->null
